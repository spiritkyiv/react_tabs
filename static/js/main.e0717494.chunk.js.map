{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","onTabSelected","selectedTabId","selectedTab","find","tab","id","className","map","classNames","href","onClick","newTab","title","content","App","useState","setSelectedTub","slectedTab","ReactDOM","render","document","getElementById"],"mappings":"kNAUaA,EAAwB,SAAC,GAK/B,IAJLC,EAII,EAJJA,KACAC,EAGI,EAHJA,cACAC,EAEI,EAFJA,cAGMC,EAAeH,EAAKI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOJ,MAAkBF,EAAK,GAOxE,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKO,UAAU,gBAAf,SACE,6BACGP,EAAKQ,KAAI,SAAAH,GAAG,OACX,oBACEE,UAAWE,IACT,CACE,YAAaJ,EAAIC,KAAOH,EAAYG,KAGxC,UAAQ,MANV,SASE,mBACEI,KAAI,WAAML,EAAIC,IACd,UAAQ,UACRK,QAAS,WAvBA,IAACC,KAuBoBP,GAtB/BC,KAAOJ,GAChBD,EAAcW,IAkBN,SAKGP,EAAIQ,SAPFR,EAAIC,WAcjB,qBAAKC,UAAU,QAAQ,UAAQ,aAA/B,SACGJ,EAAYW,cC1CRd,EAAc,CACzB,CAAEM,GAAI,QAASO,MAAO,QAASC,QAAS,eACxC,CAAER,GAAI,QAASO,MAAO,QAASC,QAAS,eACxC,CAAER,GAAI,QAASO,MAAO,QAASC,QAAS,gBAG7BC,EAAgB,WAC3B,MAAsCC,mBAAShB,EAAK,IAApD,mBAAOG,EAAP,KAAoBc,EAApB,KAMA,OACE,sBAAKV,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,mCACsBJ,EAAYU,SAGlC,qBAAK,UAAQ,gBAAb,SACE,qBAAKN,UAAU,gBAAf,SACE,cAAC,EAAD,CACEP,KAAMA,EACNC,cAdY,SAACiB,GACrBD,EAAeC,IAcPhB,cAAeC,EAAYG,aC7BvCa,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.e0717494.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\nimport { Tab } from '../../types/Tabs';\n\ntype Props = {\n  tabs: Tab[],\n  onTabSelected: (tab: Tab) => void,\n  selectedTabId: string,\n};\n\nexport const Tabs: React.FC<Props> = ({\n  tabs,\n  onTabSelected,\n  selectedTabId,\n\n}) => {\n  const selectedTab = (tabs.find(tab => tab.id === selectedTabId) || tabs[0]);\n  const handleClickTab = (newTab: Tab) => {\n    if (newTab.id !== selectedTabId) {\n      onTabSelected(newTab);\n    }\n  };\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => (\n            <li\n              className={classNames(\n                {\n                  'is-active': tab.id === selectedTab.id,\n                },\n              )}\n              data-cy=\"Tab\"\n              key={tab.id}\n            >\n              <a\n                href={`#${tab.id}`}\n                data-cy=\"TabLink\"\n                onClick={() => handleClickTab(tab)}\n              >\n                {tab.title}\n              </a>\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {selectedTab.content}\n      </div>\n    </div>\n\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs';\n\nimport { Tab } from './types/Tabs';\n\nexport const tabs: Tab[] = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTab, setSelectedTub] = useState(tabs[0]);\n\n  const onTabSelected = (slectedTab: Tab) => {\n    setSelectedTub(slectedTab);\n  };\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${selectedTab.title}`}\n      </h1>\n\n      <div data-cy=\"TabsComponent\">\n        <div className=\"tabs is-boxed\">\n          <Tabs\n            tabs={tabs}\n            onTabSelected={onTabSelected}\n            selectedTabId={selectedTab.id}\n          />\n        </div>\n\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}